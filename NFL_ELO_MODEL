{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMDNtxNzjgjgWM4VAJ6TsZm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OtTpQdVDew4r","executionInfo":{"status":"ok","timestamp":1761515131266,"user_tz":360,"elapsed":9428,"user":{"displayName":"oscar campos","userId":"05775422317227794607"}},"outputId":"0faecc6f-111c-4698-d278-59f4af8bf8ec"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.12/dist-packages (2.2.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (2.0.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.12/dist-packages (1.6.1)\n","Requirement already satisfied: xgboost in /usr/local/lib/python3.12/dist-packages (3.1.0)\n","Requirement already satisfied: lightgbm in /usr/local/lib/python3.12/dist-packages (4.6.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.12/dist-packages (3.10.0)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.16.2)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.5.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (3.6.0)\n","Requirement already satisfied: nvidia-nccl-cu12 in /usr/local/lib/python3.12/dist-packages (from xgboost) (2.27.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.3.3)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (4.60.1)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (1.4.9)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (25.0)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (11.3.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib) (3.2.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n"]}],"source":["!pip install pandas numpy scikit-learn xgboost lightgbm matplotlib\n"]},{"cell_type":"code","source":["\n","import pandas as pd\n","import datetime\n","from random import randint\n","from time import sleep\n","import os\n","import requests\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from pathlib import Path\n"],"metadata":{"id":"4PFySHF7e_a5","executionInfo":{"status":"ok","timestamp":1761515262674,"user_tz":360,"elapsed":13,"user":{"displayName":"oscar campos","userId":"05775422317227794607"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#Mounting Google Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","DATA_NFL_DIR = \"/content/drive/MyDrive/NFL_Project/reports\"\n","os.makedirs(DATA_NFL_DIR, exist_ok=True)\n","\n","df = pd.read_csv(f\"{DATA_NFL_DIR}/games_clean_2019_2024_international_HFA_MOV.csv\")\n","print(\"Loaded data:\", df.shape)\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"nwFx4zh9fBBH","executionInfo":{"status":"ok","timestamp":1761515313096,"user_tz":360,"elapsed":1022,"user":{"displayName":"oscar campos","userId":"05775422317227794607"}},"outputId":"b11ae66a-fd06-4f00-b76e-172cdbd1f530"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Loaded data: (1675, 27)\n"]},{"output_type":"execute_result","data":{"text/plain":["   season season_type Week  week_num        Date          home_team  \\\n","0    2019     regular    1       1.0  2019-09-05      Chicago Bears   \n","1    2019     regular    1       1.0  2019-09-08  Minnesota Vikings   \n","2    2019     regular    1       1.0  2019-09-08      New York Jets   \n","\n","           away_team  home_score  away_score         Winner/tie  ...  \\\n","0  Green Bay Packers         3.0        10.0  Green Bay Packers  ...   \n","1    Atlanta Falcons        28.0        12.0  Minnesota Vikings  ...   \n","2      Buffalo Bills        16.0        17.0      Buffalo Bills  ...   \n","\n","  elo_hfa_pts_season  elo_hfa_pts_team_filled  elo_hfa_pts_season_filled  \\\n","0          12.267528               -56.071481                  12.267528   \n","1          12.267528                99.950989                  12.267528   \n","2          12.267528               -85.043237                  12.267528   \n","\n","  home_field_advantage_pts  pre_elo_home  pre_elo_away  \\\n","0                    -10.0        1500.0        1500.0   \n","1                     90.0        1500.0        1500.0   \n","2                    -10.0        1500.0        1500.0   \n","\n","   expected_home_win_prob  margin_of_victory  mov_multiplier  home_win  \n","0                0.485613                7.0        2.079442       0.0  \n","1                0.626699               16.0        2.833213       1.0  \n","2                0.485613                1.0        0.693147       0.0  \n","\n","[3 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-5553f0df-c27a-4db4-8512-f632876829de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>season</th>\n","      <th>season_type</th>\n","      <th>Week</th>\n","      <th>week_num</th>\n","      <th>Date</th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>away_score</th>\n","      <th>Winner/tie</th>\n","      <th>...</th>\n","      <th>elo_hfa_pts_season</th>\n","      <th>elo_hfa_pts_team_filled</th>\n","      <th>elo_hfa_pts_season_filled</th>\n","      <th>home_field_advantage_pts</th>\n","      <th>pre_elo_home</th>\n","      <th>pre_elo_away</th>\n","      <th>expected_home_win_prob</th>\n","      <th>margin_of_victory</th>\n","      <th>mov_multiplier</th>\n","      <th>home_win</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019</td>\n","      <td>regular</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>2019-09-05</td>\n","      <td>Chicago Bears</td>\n","      <td>Green Bay Packers</td>\n","      <td>3.0</td>\n","      <td>10.0</td>\n","      <td>Green Bay Packers</td>\n","      <td>...</td>\n","      <td>12.267528</td>\n","      <td>-56.071481</td>\n","      <td>12.267528</td>\n","      <td>-10.0</td>\n","      <td>1500.0</td>\n","      <td>1500.0</td>\n","      <td>0.485613</td>\n","      <td>7.0</td>\n","      <td>2.079442</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019</td>\n","      <td>regular</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>2019-09-08</td>\n","      <td>Minnesota Vikings</td>\n","      <td>Atlanta Falcons</td>\n","      <td>28.0</td>\n","      <td>12.0</td>\n","      <td>Minnesota Vikings</td>\n","      <td>...</td>\n","      <td>12.267528</td>\n","      <td>99.950989</td>\n","      <td>12.267528</td>\n","      <td>90.0</td>\n","      <td>1500.0</td>\n","      <td>1500.0</td>\n","      <td>0.626699</td>\n","      <td>16.0</td>\n","      <td>2.833213</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019</td>\n","      <td>regular</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>2019-09-08</td>\n","      <td>New York Jets</td>\n","      <td>Buffalo Bills</td>\n","      <td>16.0</td>\n","      <td>17.0</td>\n","      <td>Buffalo Bills</td>\n","      <td>...</td>\n","      <td>12.267528</td>\n","      <td>-85.043237</td>\n","      <td>12.267528</td>\n","      <td>-10.0</td>\n","      <td>1500.0</td>\n","      <td>1500.0</td>\n","      <td>0.485613</td>\n","      <td>1.0</td>\n","      <td>0.693147</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows Ã— 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5553f0df-c27a-4db4-8512-f632876829de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5553f0df-c27a-4db4-8512-f632876829de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5553f0df-c27a-4db4-8512-f632876829de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-85cbd647-07f1-4934-9b2d-9b2e372a168b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85cbd647-07f1-4934-9b2d-9b2e372a168b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-85cbd647-07f1-4934-9b2d-9b2e372a168b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Output files (to be generated):\n","\n","- games_elo_noncontinuous.csv â€“ Elo ratings reset each season\n","\n","- games_elo_continuous.csv â€“ Elo ratings carried across season\n","\n","purpose:\n","\n"," Implement the Elo rating system using dynamic team ratings and per-game Home Field Advantage (HFA). Both non-continuous (reset each season) and continuous (carry over to next season) variants will be produced. Each gameâ€™s expected win probability is computed from current Elo ratings plus the gameâ€™s HFA, and rating updates are scaled by a margin-of-victory (MOV) multiplier.\n","\n","columns:\n","- season\n","- week_num\n","- home_team\n","- away_team\n","- home_score\n","- away_score\n","- home_win (1, 0, or 0.5)\n","- home_field_advantage_pts (per-game HFA in Elo points; 0 for international/neutral games)\n","- is_international (used only to validate HFA=0 on these rows)\n","- mov_multiplier (log(MOV+1) tempered term; currently ln(MOV+1) when ratings are equal)\n","- expected_home_win_prob (baseline from data pipeline; used for QA/ML features, not for Elo math)"],"metadata":{"id":"WZckqsiAhaUq"}},{"cell_type":"markdown","source":["# ELO Model"],"metadata":{"id":"JwpQqB_YkMHL"}},{"cell_type":"code","source":[],"metadata":{"id":"txxbbr-QkWCH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Continues ELO Model"],"metadata":{"id":"nLuf_mWLkQ23"}},{"cell_type":"code","source":[],"metadata":{"id":"d54Jyq-pj1Rp"},"execution_count":null,"outputs":[]}]}